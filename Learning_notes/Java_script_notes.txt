( ) - parentheses
invoke -call
console.table();
-------------------------------------------------
Variable//

var a= 2 + 7; // this is statement
var - variable in js 
a    - name of variable
2+7 - expression

var
let
const

-------------------------------------------------
Data types//
1.String - " any text "
2.Number - Number
3.Boolean - Ture / False
4.Null - null
5.Undefined - undefined
6. Symbol - symbol('something')
7.Object - {key:  'value'}
  -Array [1,"text",false]
  -Function - function name(){          }

String//
Template literals(template Strings)
let string=`  string text ${expression} ${variable} `  ;
`Array//
eg.
let box = ["apple","orange",false,15]

to show single data from array
box[0]

to overwrite value in array
box[0]= "pineapple";

Object//
eg.
let fruit={key:value};
obj_name.keyname
obj_name["keyname"]=newvlaue//to overwrite value

**Array is also called obj**
---------------------------------------------------------
Operators
*Mathematical Operations*
+,-,*,/
** expotential
++ increment
-- decrement
% modulous
a++ is show a and increment after next line
++a is increment and show value.

(+) String Operator
-----------------------------------------------
Comparison Operator
 ==   Equal 
!= Not Equal

===  equal value and equal data type

***bonus tip 
Tenary operator
let x =5;
x >5 ? true:false
**
-------------------------------------
Function Statement | Declaration//
*is a block of code designed to perform a particular Task
function name(){statement 1;statement 2;}

Parameter in function//
function name(variable){ ; }

Using return to get value.

Function Expression//
variable = function (){
return value;
}

IIFE//immediately  invoked function expression
(function(){
return value;
})()

Block Scope//
( let nk declare htr yin khw use lo ma ya
var nk declare htr yin khw use lo ya
)
Eg.
{
 let a = 1;
var b=2;
}
console.log(a); // this statement won't work cus a is in the block scope  
To get a value from obj in parameter we need to write a value with "string"
eg.
let fruit_price= {
apple : 100,
mango:200,
grape:300
}
function togetvaluefromfruitPrice(price){
return fruit_price[price];

function in obj//
let obj= {
name :"sithu",
run(){ return "this is run";}
};

**function's function will stop when the function is return a value**
---------------------------------------------------
Method//
What is method - method is also function

this -> represent the current obj.

functions in object is called methods.
------------------------------------------------------
Conditional Statement//
1//
if(condition){
statement;
}

2//
if(condition){
statement 1;
}else{
statement 2;
}

3//
if(condition 1){
statement 1;
}else if(condition 2{
statement 2;
}else
{statement 3;
}

**else don't need condition**
----------------------------------------------------
Using Logic Operator(more than one condition)//

&& -- AND operator
||     -- OR op-perator

-------------------------------------------
Looping
for(statement 1;statement 2;statement 3)
{ code block }

statement 1 // is executed {one time}  before the execution of the code block.
statement 2// defines the condition for execution the code block.
statement 3// is executed {every time} after the code block has been executed.

using //break;// to stop loop
using //continue;//to skip

Array & object looping//

for array - using array length to get value
for(x of array_name){ console.log(x)}; // another method to get value from array
** can be used only array**

for(x in arr_name or obj_name){console.log(x)}; // another method to get value from array or object
**arr_name will return index number in this method**
**obj_name will return key value in this method**

possible error// statement 2 in for loop 
----------------------------------------------------------
Summary Programming Basic (JS)
 **need to learn -while loop , do while 
There are property and methods in object.
-----------------------------------------------------------------------
Classes//
-classes are a template for creating objects.

classes also same as object.
Classes cannot be used to display.But there are someways to show output.
	1.Changing the class to object,this method is called instance.Use new keyword to build the class to object.
	2.using static keyword variable to declare  properties.

constructor()//
constructor in the class will work if you build instance for your class.
you can also use parameter in the instance.That will pass into the constructor's parameter if that was used.

-----------------------------------------------------------------------------------------------
Standard Built-in objects & Functions//

Date()
Number()
Math()

Date()//
getMonth(),getday(),etc...->start from 0//be careful

setmethod()//
date.setDate(5);// input
------------------------------------------------------------------------------------------------------
Everything is Object//

String()
Number()->tofixed() will dathama num 1 toe

-----------------------
frontendmentor
cssbattle
codewar

-----------------------------------
Basic Input and Output//

DOM obj//
select an element
 	1. document.getElementById()
	2.document.getElementsByTagName() // this is html tag
	3.document.getElementsByClassName()

get text
	1.selected.innerText
	2.selected.innerHTML
	3.selected.value
set text
	1.selected.innerText = " new text"
event
	1.onclick = fun()
	2.ondbclick= fun()

document.getElementsByTagName()
document.getElementsByClassName()
// work like a array

**the input value from input type 
-------------------------------------------------
Calculation in Javascript//

input type="number" fik tok mh // idnumber.valueAsNumber ka alok lok mhr pr

------------------------------------------------------
DOM manipulation//
	-dom is document object model
	-html element will become object of js
	-manipulation mean to change html whatever we want using dom obj
	-to control web UI

document.querySelector()//top ka 1ku pl phan lo ya just one only one
eg.document.querySelector(".abc")// class so . ,id so #
document.querySelectorAll()//d htl mhr css twy selector htae p use 

--------------------------------------------------------------------------
GET DATA

Content//
document.querySelector("h1").innerText

html//
document.querySelector("ul").innerHTML

style//
document.querySelector("h1").style

value,valueAsNumber,valueAsDate//these are from input  
document.querySelector("[name  = 'name']").value
document.querySelector("[name = 'weight']").valueAsNumber// input type number mhr pl aloke loke

attribute//html tag htl ka attribute twy ko hlan phan
document.querySelector("a").href//property pone sn nk phan tr

document.querySelector("img").getAttribute("src")// specific fik tl vs mhr ko yay htr tk file path atine pya

tips **server side ko upload lok ml so yin name mhr array so tk thabw myo name="photo[]" ae lo lay htae pay ya array lo thi aung**

input files mhr multiple file htae chin yin <input type="file" multiple>

select mhr value choose htr tk value ma ya value ko attribute nk return pyn.
<select name= "country">
<option value="mm">Myanmar</option>
</select>
document.querySelector("[name='country']").value //so yin mm ya ml Myanmar ma ya

document.images[0].getAttribute("src")
document.images[0].setAttribute("src","<file path>")// set so value 2 ku
-------------------------------------------------------------------------------------------------
Event Handling//
	-html attribute// like using onclick in html attribute to execute to write js codes 
	-property
	eg.  	<button id="#btn">Test</button>
		function run(){console.log("this is run");
		document.querySelectol("#btn").onclick = function(){
		run() };
		//button yk element htl mhr shi tk onclick so tk property ko use
	-method // method mhr parameter 3 ku pr ml aku tok 2ku pl pr ml
	eg.	document.querySelector("#btn").addEventListener("click",function(){ run(); });

Basic Events
	-mouse
		.onclick	
		.ondblclick	
		.mouseover//mouse youk lr yin
		eg. onmouseover 
		.mouseout//mouse htwt twr tk achain mhr alok lok
		eg. onmouseout
	-keyboard
		.keyup //key ko phi htr p hlout lyk yin alok lok
			document.addEventListener("keyup",function(){console.log ("hello keyup")});
		.keypress//phi lyk tr nk alok lok
		.keydown//same as keypress
-----------------------------------------------------------------------------------------------
More About Events//
	
	1-event parameter 
	      // keyup event
	eg.//document.addEventListener("keyup",function(event){
		console.log(event); 
	
	event parameter ko html attribute mhr pass chin yin apyae asone yite
	eg.//    <button onclick="run(event)">Click ME to Test</button>

	2-e.preventDefault() //default function twy alok  ma lok tok wo stop twr tl ..like in <a> tag
			  //a tag mhr href link chate pay htr lo click lyk yin page kuu twr tr ka default function



	3- this keyword in event
	     //this keyword refers to the object of his object.

	4. focus and blur event for input
	    //input ko cursor htouk tr ka focus
	    //cursor ko input htl ka htwt p document htl ka bal nay yr fikfik htouk lyk tr ka blur

	5. change event for input & select
	   //form input mhr enter type yin change event pw lr

	6. submit event for form
	//form mhr id pay p alok lok

	7. onload and scroll event for window
	//onload ka nout sone mh alok lok
	eg. window.onload = funtion (){
		console.log("I'm window onload");
		}

	//scroll
	window.addEventListener("scroll",function(){
	
	});
----------------------------------------------------------------------------------------------------------------------------------
HTML DOM Elements (NODES)// to create html with js
html bat ka element twy ko js ka nodes lo pl that mht htr pr tl

document.createElement("p"); <- HTML element
document.createTextNode("Hello"); <- create text
to put text in html element -> newP.append(newText)
document.body.append(newP);   

.append  // ka out ka ny htae
.prepend // ka apw ka nay htae

---------------------------------------------------------------------------------------
Useful prototype methods//
methods ka obj mhr pl pr

String method//
w3school ref
let name = "sithu win"; // primitive data type
let str = new String("SithuWIn"); // using string object
text htl mh tunyi tk text twy akone pyin chin yin regular expression ko use
text1.replace(/dolor/g,"abc") //  global flag g ( /g)
text1.replace(/DOLOR/i,"abc") //   /i  ka case insensitive  DOLOR lo shr lyk yin shr ma twe wo ae tok /i ko use yin ay sy ya
trim() // ma lo att tk space twy akone phyt
split() //datatype changing string->array


Number Method //
 -   mybtc.toFixed(3) // dathama 3 nay yr phyt anout ka hr ko kyi 5 kyw yin 1 toe
 -   mybtc.toPrecision(3) // same as toFixed
 -   parseInt() parsefloat()
 -  Math.floor() //short u
     Math.ceil() // toe u

Array Method//
 array.length
 array.toString()
 array.join(" "); // array room 1ku gyr ka hr ko bal hr htae chin ll htae lo ya eg. -  ,  ;
  array ko ashae ka htae yin unshift htote yin shift
  array ko anout ka htae yin push htote yin pop
  sort() // alphabetically array ce
  reverse() // reverse of sort

Methods for object//
 Object.keys(obj_name)
 Objects.value(obj_name)
---------------------------------------------------------------------------------
Array Iteration// array iteration mean i in loop

array.forEach(callback fun)// function fik tk atwt executable lok nai
array_name.forEach(function(i){
	
});
three parameter in that callback fun(i,index,arr)//
first parameter means items in array
second parameter means index_number in arrray
third parameter means array that u built 

NodeList is not a real array.
-----------------------------------------------------------------------------------------------
Popular Array Method//
isArray() // Array.isArray(array_name);  true return
includes() // fruits.includes("Apple"); // case sensitive fik array htl mhr shi tk text nk akone tu mh true return pyan
indexOf() //fruits.indexOf("Apple"); 
splice() // fruits.splice(2,3,) // (start, end)
concat() // array myar paung chin

map() //loop
same as foreach 
fruits.map(function(element){
	
})
map ka use mk array yk size atine array athit htote pay with undefined value.//eg Array[undefined,undefined]
return value// htote pay mh array htl mhr value pr twr mhr fik tl.
this is the main concept of map function

filter()//loop
filter so tk atine sit htote pay tr
thu ll new array htote pay tl without value tok ma hok wo Array room lay ko declare loke thalo htote pay//eg. Array[]
p tok condition nk kite tr pl array pyan pay tl

find()
find also loop
find so tk atine shr ml 1ku twe yin stop twr ml

reduce()//also loop too
//reduce nk tachr hr twy nk ma tu nk acht ka reduce yk callback function twy ka apw ka hr twy nk ma tu tok tr
arrayname.reduce(function(previous vlaue, current value) , initial value )
//previous value always changes

some()
true false return pyan
tacho tawat ka myr lr nae lr

every()
akone lone myrr lr nae lr

-----------------------------------------------------------------------------------------------------------
Arrow function//
function ==      ()=>

-arrow function come from function expressoin;
function expression//
let one = function(){
	return "this is one";
}

arrow function//
let one = () =>{
	retrun "this is one";
}

arrow function mhr return 1 kyaung pl shi yin//
let one = ()=> "this is one";

multiple executabale code line pr yin//
let one =() =>{
	let x = "this is two";
	return x;
}

with one parameter in it//
let one = x => "this is x";

with multiple parameters in it//
let one = (x,y) => x+y;

IIFE with arrow function//
(()=>{
code execute;
})();

callback function with arrow fun//
window.addEventListener("load",()=>console.log('this is six'));

obj htl mhr shi tk method with arrow//
eg.
swhoName : ()=> console.log("blahblah");

**method htl mhr use tk this ka thu ayin obj ko representative
   arrow function nk yay lyk tk this ka window ko representative**
---------------------------------------------------------------------------------
Browser Object model//

Properties in BOM//
innerWidth & innerHeight//outerWidth & outerHeight
window.innerWidth
window.outerWidth

pageYoffset// like  Y-axis

events//scroll,resize,load
window load ka browser g taku lone loading swl p tk nout sone mh alok lok tr


Method in BOM//
alert()
confrim()
prompt()
open()
close()

timing-timeOut method()//
setTimeout(run,3000) // second paramete is milisecond
to clear this timeout use clearTimeout()
only console.log is working return doesn't work
setInterval(run,3000) // 3 second 1khr tine alok lok
to clear is interval use clearInterval()

Object in BOM//
screen 
location//
location.reload//browser ko reload swl
location.href//
history//
------------------------------------------------------------------------------------------------------------
Conclusion//

-Spread syntax (...)
-localStorage
-Geoloaction
-JSON
-fetch()

Spread Syntax(ES6 versin mhr pr lr tk trend fik tk hr)// this is like an array 
result = [...arr1,"abc",...arr2,...arr1];
function htl mhr htae chin tk parameter ko ll array ka nay hlan khw p use lo ya
Eg.	function run(x,y,z){
	return x+y+z;
	}
	console mhr //run(...arr1)

-Local Storage//
data taku ko browser mhr ma pyout aung thein chin tr
localStorage.setItem("name","sithu")//item htae tr

-Geolocation//(thu ko navigator ka nay ya mhr)
navigator.geolocation.getCurrentPosition()

-JSON//string data type JSON(Js object notation)
`  {"name":"sithuwin,"age":"18"} `    // this is json string
JSON.parse()
json ka nay js yk object ko change pay

JSON.stringify()
js object ka nay json pyn change pay

json is giving data data ko pyn phan chin ml so yin fetch nk pyan phan
fetch()

Fetch() and json string work through server//please run with live server
internet traffic time lay tok wait ya ml**

-NODE JS & NPM(node package manager) intro
RENDERING and JS ENGINE
node js is a javascript runtime built on chrome'v8(JS ENGINE in chrome)
down LTS version

javascript code twy ko out of browser mhr run nai pr p.
node htl mhr js code twy run lo ya.
npm js ka frontend libraries twy ko install lok lo ya.
frontend mhr name g tr so yin animatestyle

box.classList.toggle() <- htote lyk htae lyk lok tr
